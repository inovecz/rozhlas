<?php

declare(strict_types=1);

return [
    'endpoint' => env('CONTROL_CHANNEL_ENDPOINT', 'unix:///var/run/jsvv-control.sock'),
    'timeout_ms' => (int) env('CONTROL_CHANNEL_TIMEOUT_MS', 500),
    'retry_attempts' => (int) env('CONTROL_CHANNEL_RETRY', 3),
    'deadline_ms' => (int) env('CONTROL_CHANNEL_DEADLINE_MS', 500),
    'handshake_timeout_ms' => (int) env('CONTROL_CHANNEL_HANDSHAKE_TIMEOUT_MS', 150),
    'auto_start' => filter_var(env('CONTROL_CHANNEL_AUTO_START', true), FILTER_VALIDATE_BOOLEAN),
    'startup_timeout_ms' => (int) env('CONTROL_CHANNEL_STARTUP_TIMEOUT_MS', 3000),
    'worker_python' => env('CONTROL_CHANNEL_WORKER_PYTHON', env('PYTHON_BINARY', 'python3')),
    'worker_script' => env('CONTROL_CHANNEL_WORKER_SCRIPT', base_path('python-client/daemons/control_channel_worker.py')),
    'worker_log' => env('CONTROL_CHANNEL_WORKER_LOG', storage_path('logs/daemons/control_channel_worker.log')),
    'worker_env' => array_filter([
        'CONTROL_CHANNEL_ENDPOINT' => env('CONTROL_CHANNEL_ENDPOINT'),
        'CONTROL_CHANNEL_TIMEOUT_MS' => env('CONTROL_CHANNEL_TIMEOUT_MS'),
        'CONTROL_CHANNEL_RETRY' => env('CONTROL_CHANNEL_RETRY'),
        'CONTROL_CHANNEL_DEADLINE_MS' => env('CONTROL_CHANNEL_DEADLINE_MS'),
        'CONTROL_CHANNEL_HANDSHAKE_TIMEOUT_MS' => env('CONTROL_CHANNEL_HANDSHAKE_TIMEOUT_MS'),
        'CONTROL_CHANNEL_DRY_RUN' => env('CONTROL_CHANNEL_DRY_RUN'),
        'CONTROL_CHANNEL_POLL_INTERVAL' => env('CONTROL_CHANNEL_POLL_INTERVAL'),
        'MODBUS_PORT' => env('MODBUS_PORT'),
        'MODBUS_METHOD' => env('MODBUS_METHOD'),
        'MODBUS_BAUDRATE' => env('MODBUS_BAUDRATE'),
        'MODBUS_PARITY' => env('MODBUS_PARITY'),
        'MODBUS_STOPBITS' => env('MODBUS_STOPBITS'),
        'MODBUS_BYTESIZE' => env('MODBUS_BYTESIZE'),
        'MODBUS_TIMEOUT' => env('MODBUS_TIMEOUT'),
        'MODBUS_UNIT_ID' => env('MODBUS_UNIT_ID'),
        'MODBUS_RS485_GPIO_ENABLE' => env('MODBUS_RS485_GPIO_ENABLE'),
        'MODBUS_RS485_GPIO_CHIP' => env('MODBUS_RS485_GPIO_CHIP'),
        'MODBUS_RS485_GPIO_LINE' => env('MODBUS_RS485_GPIO_LINE'),
        'MODBUS_RS485_GPIO_ACTIVE_HIGH' => env('MODBUS_RS485_GPIO_ACTIVE_HIGH'),
        'MODBUS_RS485_GPIO_LEAD_SECONDS' => env('MODBUS_RS485_GPIO_LEAD_SECONDS'),
        'MODBUS_RS485_GPIO_TAIL_SECONDS' => env('MODBUS_RS485_GPIO_TAIL_SECONDS'),
        'MODBUS_RS485_GPIO_DEBUG' => env('MODBUS_RS485_GPIO_DEBUG'),
        'MODBUS_RS485_DRIVER_ENABLE' => env('MODBUS_RS485_DRIVER_ENABLE'),
        'MODBUS_RS485_DRIVER_RTS_TX_HIGH' => env('MODBUS_RS485_DRIVER_RTS_TX_HIGH'),
        'MODBUS_RS485_DRIVER_RTS_RX_HIGH' => env('MODBUS_RS485_DRIVER_RTS_RX_HIGH'),
        'MODBUS_RS485_DRIVER_LEAD_SECONDS' => env('MODBUS_RS485_DRIVER_LEAD_SECONDS'),
        'MODBUS_RS485_DRIVER_TAIL_SECONDS' => env('MODBUS_RS485_DRIVER_TAIL_SECONDS'),
    ], static fn ($value) => $value !== null),
];
